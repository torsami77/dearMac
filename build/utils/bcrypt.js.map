{"version":3,"sources":["../../src/utils/bcrypt.js"],"names":["saltRounds","salt","bcrypt","genSaltSync","hashPassword","password","hashSync","comparePassword","hashedPassword","compareSync"],"mappings":";;;;;;;AACA;;;;AADA;;AAEA;;;;;AAKA,MAAMA,UAAU,GAAG,EAAnB;;AACA,MAAMC,IAAI,GAAGC,kBAAOC,WAAP,CAAmBH,UAAnB,CAAb;;AAEA,MAAMI,YAAY,GAAGC,QAAQ,IAAIH,kBAAOI,QAAP,CAAgBD,QAAhB,EAA0BJ,IAA1B,CAAjC;AAEA;;;;;;;;;;AAMA,MAAMM,eAAe,GAAG,CAACC,cAAD,EAAiBH,QAAjB,KAA8BH,kBAAOO,WAAP,CAAmBJ,QAAnB,EAA6BG,cAA7B,CAAtD","sourcesContent":["/* eslint-disable camelcase */\nimport bcrypt from 'bcryptjs';\n/**\n   * Hash Password Method\n   * @param {string} password\n   * @returns {string} returns hashed password\n   */\nconst saltRounds = 10;\nconst salt = bcrypt.genSaltSync(saltRounds);\n\nconst hashPassword = password => bcrypt.hashSync(password, salt);\n\n/**\n   * comparePassword\n   * @param {string} hashedPassword\n   * @param {string} password\n   * @returns {Boolean} return True or False\n   */\nconst comparePassword = (hashedPassword, password) => bcrypt.compareSync(password, hashedPassword);\n\n\nexport {\n  hashPassword,\n  comparePassword,\n};\n"],"file":"bcrypt.js"}